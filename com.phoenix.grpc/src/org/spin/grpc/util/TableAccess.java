// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: access.proto

package org.spin.grpc.util;

/**
 * <pre>
 * Access for Table
 * </pre>
 *
 * Protobuf type {@code access.TableAccess}
 */
public  final class TableAccess extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:access.TableAccess)
    TableAccessOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TableAccess.newBuilder() to construct.
  private TableAccess(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TableAccess() {
    tableName_ = "";
    isExclude_ = false;
    isCanReport_ = false;
    isCanExport_ = false;
    accessTypeRules_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TableAccess(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            tableName_ = s;
            break;
          }
          case 16: {

            isExclude_ = input.readBool();
            break;
          }
          case 24: {

            isCanReport_ = input.readBool();
            break;
          }
          case 32: {

            isCanExport_ = input.readBool();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            accessTypeRules_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.spin.grpc.util.ADempiereAccess.internal_static_access_TableAccess_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.spin.grpc.util.ADempiereAccess.internal_static_access_TableAccess_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.spin.grpc.util.TableAccess.class, org.spin.grpc.util.TableAccess.Builder.class);
  }

  /**
   * Protobuf enum {@code access.TableAccess.AccessTypeRule}
   */
  public enum AccessTypeRule
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCESSING = 0;</code>
     */
    ACCESSING(0),
    /**
     * <code>EXPORTING = 1;</code>
     */
    EXPORTING(1),
    /**
     * <code>REPORTING = 2;</code>
     */
    REPORTING(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCESSING = 0;</code>
     */
    public static final int ACCESSING_VALUE = 0;
    /**
     * <code>EXPORTING = 1;</code>
     */
    public static final int EXPORTING_VALUE = 1;
    /**
     * <code>REPORTING = 2;</code>
     */
    public static final int REPORTING_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccessTypeRule valueOf(int value) {
      return forNumber(value);
    }

    public static AccessTypeRule forNumber(int value) {
      switch (value) {
        case 0: return ACCESSING;
        case 1: return EXPORTING;
        case 2: return REPORTING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccessTypeRule>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccessTypeRule> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccessTypeRule>() {
            public AccessTypeRule findValueByNumber(int number) {
              return AccessTypeRule.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.spin.grpc.util.TableAccess.getDescriptor().getEnumTypes().get(0);
    }

    private static final AccessTypeRule[] VALUES = values();

    public static AccessTypeRule valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccessTypeRule(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:access.TableAccess.AccessTypeRule)
  }

  public static final int TABLENAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object tableName_;
  /**
   * <code>string tableName = 1;</code>
   */
  public java.lang.String getTableName() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   * <code>string tableName = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISEXCLUDE_FIELD_NUMBER = 2;
  private boolean isExclude_;
  /**
   * <code>bool isExclude = 2;</code>
   */
  public boolean getIsExclude() {
    return isExclude_;
  }

  public static final int ISCANREPORT_FIELD_NUMBER = 3;
  private boolean isCanReport_;
  /**
   * <code>bool isCanReport = 3;</code>
   */
  public boolean getIsCanReport() {
    return isCanReport_;
  }

  public static final int ISCANEXPORT_FIELD_NUMBER = 4;
  private boolean isCanExport_;
  /**
   * <code>bool isCanExport = 4;</code>
   */
  public boolean getIsCanExport() {
    return isCanExport_;
  }

  public static final int ACCESSTYPERULES_FIELD_NUMBER = 5;
  private int accessTypeRules_;
  /**
   * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
   */
  public int getAccessTypeRulesValue() {
    return accessTypeRules_;
  }
  /**
   * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
   */
  public org.spin.grpc.util.TableAccess.AccessTypeRule getAccessTypeRules() {
    org.spin.grpc.util.TableAccess.AccessTypeRule result = org.spin.grpc.util.TableAccess.AccessTypeRule.valueOf(accessTypeRules_);
    return result == null ? org.spin.grpc.util.TableAccess.AccessTypeRule.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTableNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (isExclude_ != false) {
      output.writeBool(2, isExclude_);
    }
    if (isCanReport_ != false) {
      output.writeBool(3, isCanReport_);
    }
    if (isCanExport_ != false) {
      output.writeBool(4, isCanExport_);
    }
    if (accessTypeRules_ != org.spin.grpc.util.TableAccess.AccessTypeRule.ACCESSING.getNumber()) {
      output.writeEnum(5, accessTypeRules_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTableNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (isExclude_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isExclude_);
    }
    if (isCanReport_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isCanReport_);
    }
    if (isCanExport_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, isCanExport_);
    }
    if (accessTypeRules_ != org.spin.grpc.util.TableAccess.AccessTypeRule.ACCESSING.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, accessTypeRules_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.spin.grpc.util.TableAccess)) {
      return super.equals(obj);
    }
    org.spin.grpc.util.TableAccess other = (org.spin.grpc.util.TableAccess) obj;

    boolean result = true;
    result = result && getTableName()
        .equals(other.getTableName());
    result = result && (getIsExclude()
        == other.getIsExclude());
    result = result && (getIsCanReport()
        == other.getIsCanReport());
    result = result && (getIsCanExport()
        == other.getIsCanExport());
    result = result && accessTypeRules_ == other.accessTypeRules_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLENAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    hash = (37 * hash) + ISEXCLUDE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsExclude());
    hash = (37 * hash) + ISCANREPORT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsCanReport());
    hash = (37 * hash) + ISCANEXPORT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsCanExport());
    hash = (37 * hash) + ACCESSTYPERULES_FIELD_NUMBER;
    hash = (53 * hash) + accessTypeRules_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.spin.grpc.util.TableAccess parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.spin.grpc.util.TableAccess parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.spin.grpc.util.TableAccess parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.spin.grpc.util.TableAccess parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.spin.grpc.util.TableAccess prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Access for Table
   * </pre>
   *
   * Protobuf type {@code access.TableAccess}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:access.TableAccess)
      org.spin.grpc.util.TableAccessOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.spin.grpc.util.ADempiereAccess.internal_static_access_TableAccess_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.spin.grpc.util.ADempiereAccess.internal_static_access_TableAccess_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.spin.grpc.util.TableAccess.class, org.spin.grpc.util.TableAccess.Builder.class);
    }

    // Construct using org.spin.grpc.util.TableAccess.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      tableName_ = "";

      isExclude_ = false;

      isCanReport_ = false;

      isCanExport_ = false;

      accessTypeRules_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.spin.grpc.util.ADempiereAccess.internal_static_access_TableAccess_descriptor;
    }

    public org.spin.grpc.util.TableAccess getDefaultInstanceForType() {
      return org.spin.grpc.util.TableAccess.getDefaultInstance();
    }

    public org.spin.grpc.util.TableAccess build() {
      org.spin.grpc.util.TableAccess result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.spin.grpc.util.TableAccess buildPartial() {
      org.spin.grpc.util.TableAccess result = new org.spin.grpc.util.TableAccess(this);
      result.tableName_ = tableName_;
      result.isExclude_ = isExclude_;
      result.isCanReport_ = isCanReport_;
      result.isCanExport_ = isCanExport_;
      result.accessTypeRules_ = accessTypeRules_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.spin.grpc.util.TableAccess) {
        return mergeFrom((org.spin.grpc.util.TableAccess)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.spin.grpc.util.TableAccess other) {
      if (other == org.spin.grpc.util.TableAccess.getDefaultInstance()) return this;
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        onChanged();
      }
      if (other.getIsExclude() != false) {
        setIsExclude(other.getIsExclude());
      }
      if (other.getIsCanReport() != false) {
        setIsCanReport(other.getIsCanReport());
      }
      if (other.getIsCanExport() != false) {
        setIsCanExport(other.getIsCanExport());
      }
      if (other.accessTypeRules_ != 0) {
        setAccessTypeRulesValue(other.getAccessTypeRulesValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.spin.grpc.util.TableAccess parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.spin.grpc.util.TableAccess) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object tableName_ = "";
    /**
     * <code>string tableName = 1;</code>
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string tableName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string tableName = 1;</code>
     */
    public Builder setTableName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tableName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string tableName = 1;</code>
     */
    public Builder clearTableName() {
      
      tableName_ = getDefaultInstance().getTableName();
      onChanged();
      return this;
    }
    /**
     * <code>string tableName = 1;</code>
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tableName_ = value;
      onChanged();
      return this;
    }

    private boolean isExclude_ ;
    /**
     * <code>bool isExclude = 2;</code>
     */
    public boolean getIsExclude() {
      return isExclude_;
    }
    /**
     * <code>bool isExclude = 2;</code>
     */
    public Builder setIsExclude(boolean value) {
      
      isExclude_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool isExclude = 2;</code>
     */
    public Builder clearIsExclude() {
      
      isExclude_ = false;
      onChanged();
      return this;
    }

    private boolean isCanReport_ ;
    /**
     * <code>bool isCanReport = 3;</code>
     */
    public boolean getIsCanReport() {
      return isCanReport_;
    }
    /**
     * <code>bool isCanReport = 3;</code>
     */
    public Builder setIsCanReport(boolean value) {
      
      isCanReport_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool isCanReport = 3;</code>
     */
    public Builder clearIsCanReport() {
      
      isCanReport_ = false;
      onChanged();
      return this;
    }

    private boolean isCanExport_ ;
    /**
     * <code>bool isCanExport = 4;</code>
     */
    public boolean getIsCanExport() {
      return isCanExport_;
    }
    /**
     * <code>bool isCanExport = 4;</code>
     */
    public Builder setIsCanExport(boolean value) {
      
      isCanExport_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool isCanExport = 4;</code>
     */
    public Builder clearIsCanExport() {
      
      isCanExport_ = false;
      onChanged();
      return this;
    }

    private int accessTypeRules_ = 0;
    /**
     * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
     */
    public int getAccessTypeRulesValue() {
      return accessTypeRules_;
    }
    /**
     * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
     */
    public Builder setAccessTypeRulesValue(int value) {
      accessTypeRules_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
     */
    public org.spin.grpc.util.TableAccess.AccessTypeRule getAccessTypeRules() {
      org.spin.grpc.util.TableAccess.AccessTypeRule result = org.spin.grpc.util.TableAccess.AccessTypeRule.valueOf(accessTypeRules_);
      return result == null ? org.spin.grpc.util.TableAccess.AccessTypeRule.UNRECOGNIZED : result;
    }
    /**
     * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
     */
    public Builder setAccessTypeRules(org.spin.grpc.util.TableAccess.AccessTypeRule value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      accessTypeRules_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.access.TableAccess.AccessTypeRule accessTypeRules = 5;</code>
     */
    public Builder clearAccessTypeRules() {
      
      accessTypeRules_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:access.TableAccess)
  }

  // @@protoc_insertion_point(class_scope:access.TableAccess)
  private static final org.spin.grpc.util.TableAccess DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.spin.grpc.util.TableAccess();
  }

  public static org.spin.grpc.util.TableAccess getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TableAccess>
      PARSER = new com.google.protobuf.AbstractParser<TableAccess>() {
    public TableAccess parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableAccess(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TableAccess> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TableAccess> getParserForType() {
    return PARSER;
  }

  public org.spin.grpc.util.TableAccess getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

