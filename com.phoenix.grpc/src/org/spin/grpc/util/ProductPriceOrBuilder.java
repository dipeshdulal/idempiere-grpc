// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core_functionality.proto

package org.spin.grpc.util;

public interface ProductPriceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:data.ProductPrice)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.data.Product product = 1;</code>
   */
  boolean hasProduct();
  /**
   * <code>.data.Product product = 1;</code>
   */
  org.spin.grpc.util.Product getProduct();
  /**
   * <code>.data.Product product = 1;</code>
   */
  org.spin.grpc.util.ProductOrBuilder getProductOrBuilder();

  /**
   * <code>.data.Decimal priceList = 2;</code>
   */
  boolean hasPriceList();
  /**
   * <code>.data.Decimal priceList = 2;</code>
   */
  org.spin.grpc.util.Decimal getPriceList();
  /**
   * <code>.data.Decimal priceList = 2;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getPriceListOrBuilder();

  /**
   * <code>.data.Decimal priceStd = 3;</code>
   */
  boolean hasPriceStd();
  /**
   * <code>.data.Decimal priceStd = 3;</code>
   */
  org.spin.grpc.util.Decimal getPriceStd();
  /**
   * <code>.data.Decimal priceStd = 3;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getPriceStdOrBuilder();

  /**
   * <code>.data.Decimal priceLimit = 4;</code>
   */
  boolean hasPriceLimit();
  /**
   * <code>.data.Decimal priceLimit = 4;</code>
   */
  org.spin.grpc.util.Decimal getPriceLimit();
  /**
   * <code>.data.Decimal priceLimit = 4;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getPriceLimitOrBuilder();

  /**
   * <code>string priceListName = 5;</code>
   */
  java.lang.String getPriceListName();
  /**
   * <code>string priceListName = 5;</code>
   */
  com.google.protobuf.ByteString
      getPriceListNameBytes();

  /**
   * <code>bool isTaxIncluded = 6;</code>
   */
  boolean getIsTaxIncluded();

  /**
   * <code>int64 validFrom = 7;</code>
   */
  long getValidFrom();

  /**
   * <code>.data.Currency currency = 8;</code>
   */
  boolean hasCurrency();
  /**
   * <code>.data.Currency currency = 8;</code>
   */
  org.spin.grpc.util.Currency getCurrency();
  /**
   * <code>.data.Currency currency = 8;</code>
   */
  org.spin.grpc.util.CurrencyOrBuilder getCurrencyOrBuilder();

  /**
   * <code>.data.TaxRate taxRate = 9;</code>
   */
  boolean hasTaxRate();
  /**
   * <code>.data.TaxRate taxRate = 9;</code>
   */
  org.spin.grpc.util.TaxRate getTaxRate();
  /**
   * <code>.data.TaxRate taxRate = 9;</code>
   */
  org.spin.grpc.util.TaxRateOrBuilder getTaxRateOrBuilder();

  /**
   * <code>int32 pricePrecision = 10;</code>
   */
  int getPricePrecision();

  /**
   * <code>.data.Decimal quantityOnHand = 11;</code>
   */
  boolean hasQuantityOnHand();
  /**
   * <code>.data.Decimal quantityOnHand = 11;</code>
   */
  org.spin.grpc.util.Decimal getQuantityOnHand();
  /**
   * <code>.data.Decimal quantityOnHand = 11;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getQuantityOnHandOrBuilder();

  /**
   * <code>.data.Decimal quantityReserved = 12;</code>
   */
  boolean hasQuantityReserved();
  /**
   * <code>.data.Decimal quantityReserved = 12;</code>
   */
  org.spin.grpc.util.Decimal getQuantityReserved();
  /**
   * <code>.data.Decimal quantityReserved = 12;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getQuantityReservedOrBuilder();

  /**
   * <code>.data.Decimal quantityOrdered = 13;</code>
   */
  boolean hasQuantityOrdered();
  /**
   * <code>.data.Decimal quantityOrdered = 13;</code>
   */
  org.spin.grpc.util.Decimal getQuantityOrdered();
  /**
   * <code>.data.Decimal quantityOrdered = 13;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getQuantityOrderedOrBuilder();

  /**
   * <code>.data.Decimal quantityAvailable = 14;</code>
   */
  boolean hasQuantityAvailable();
  /**
   * <code>.data.Decimal quantityAvailable = 14;</code>
   */
  org.spin.grpc.util.Decimal getQuantityAvailable();
  /**
   * <code>.data.Decimal quantityAvailable = 14;</code>
   */
  org.spin.grpc.util.DecimalOrBuilder getQuantityAvailableOrBuilder();
}
